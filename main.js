!function(){"use strict";class t{constructor(t,e){this._settings=t,this._formElement=e,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}enableValidation(){this._setEventListeners()}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}_checkInputValidity(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.validity.valid?(t.classList.remove(this._settings.inputErrorClass),e.textContent=""):(t.classList.add(this._settings.inputErrorClass),e.textContent=t.validationMessage)}_toggleButtonState(){this._inputList.some((t=>!t.validity.valid))?(this.disableButton(),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.remove(this._settings.inputErrorClass),e.textContent=""}))}disableButton(){this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0}}class e{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._toggleLike())),this._deleteButton.addEventListener("click",(()=>this._deleteCard())),this._cardImage.addEventListener("click",(()=>this._handleImageClick(this._name,this._link)))}_toggleLike(){this._likeButton.classList.toggle("card__like-button_active")}_deleteCard(){this._element.remove()}generateCard(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._element}}class s{constructor(t){this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._popup.querySelector(".modal__close").addEventListener("click",(()=>this.close())),this._popup.addEventListener("click",(t=>{t.target===this._popup&&this.close()}))}}class n extends s{constructor(t,e){super(t),this._handleFormSubmit=e,this._form=this._popup.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._submitButton=this._form.querySelector(".modal__button")}_getInputValues(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault();const e=this._getInputValues();this._handleFormSubmit(e),this._form.reset(),this.close()}))}close(){super.close()}}const i={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=document.querySelector("#profile-edit-button"),r=document.querySelector("#profile-title-input"),a=document.querySelector("#profile-description-input"),l=document.querySelector(".profile__add-button"),c=document.querySelector("#profile-edit-modal .modal__form"),u=document.querySelector("#add-card-modal .modal__form"),d=new t(i,c);d.enableValidation();const _=new t(i,u);_.enableValidation();const m=new class extends s{constructor(t){super(t),this._popupImage=this._popup.querySelector(".modal__image"),this._popupCaption=this._popup.querySelector(".modal__image-description")}open(t){this._popupImage.src=t.link,this._popupImage.alt=t.name,this._popupCaption.textContent=t.name,super.open()}}("#card-picture-modal");function h(t,e){m.open({name:t,link:e})}m.setEventListeners();const p=new n("#profile-edit-modal",(t=>{b.setUserInfo({name:t.title,job:t.description}),p.close()})),g=new n("#add-card-modal",(t=>{const e=E({name:t.title,link:t.description});v.addItem(e),g.close(),_.disableButton()}));function E(t){return new e(t,"#card-template",h).generateCard()}p.setEventListeners(),g.setEventListeners(),o.addEventListener("click",(()=>{const t=b.getUserInfo();r.value=t.name,a.value=t.job,d.resetValidation(),p.open()})),l.addEventListener("click",(()=>{g.open()}));const b=new class{constructor(t){let{nameSelector:e,jobSelector:s}=t;this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(t){let{name:e,job:s}=t;e&&(this._nameElement.textContent=e),s&&(this._jobElement.textContent=s)}}({nameSelector:".profile__title",jobSelector:".profile__description"}),v=new class{constructor(t,e){let{items:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:t=>{const e=E(t);v.addItem(e)}},".cards__list");v.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,